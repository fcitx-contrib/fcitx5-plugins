name: macOS build

on:
  workflow_call:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-15, macos-13]
        include:
          - { os: macos-15, arch: arm64 }
          - { os: macos-13, arch: x86_64 }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        env:
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
        run: |
          brew install \
            extra-cmake-modules \
            ninja \
            go
          ./scripts/install-deps.sh macos
          sudo tar xjf cache/macos/marisa-${{ matrix.arch }}.tar.bz2 -C /usr/local bin/marisa-build
          pip install dirhash

      - name: Download and install Fcitx5.app
        run: |
          wget https://github.com/fcitx-contrib/fcitx5-macos/releases/download/latest/Fcitx5-${{ matrix.arch }}.tar.bz2
          sudo tar xjvf Fcitx5-${{ matrix.arch }}.tar.bz2 -C "/Library/Input Methods"

      - name: Build
        run: |
          git apply --directory=libime patches/libime.patch
          git apply --directory=fcitx5-skk patches/skk.patch
          cmake -B build/macos-${{ matrix.arch }} -G Ninja -DCMAKE_BUILD_TYPE=Release
          CGO_CFLAGS="-mmacosx-version-min=13" cmake --build build/macos-${{ matrix.arch }}
          ./scripts/install.sh macos

      - name: Upload arch-specific artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-macos-${{ matrix.arch }}
          path: |
            build/macos-${{ matrix.arch }}/*-${{ matrix.arch }}.tar.bz2

      - name: Upload arch-unspecific artifact
        if: ${{ matrix.os == 'macos-15' }}
        uses: actions/upload-artifact@v4
        with:
          name: artifact-macos
          path: |
            build/macos-${{ matrix.arch }}/*-any.tar.bz2

      - name: Check validity
        run: ./scripts/check-validity.sh

      - name: Generate meta-${{ matrix.arch }}.json
        run: |
          python scripts/generate-meta.py

      - name: Upload meta-${{ matrix.arch }}.json
        uses: actions/upload-artifact@v4
        with:
          name: artifact-macos-meta-${{ matrix.arch }}.json
          path: |
            meta-${{ matrix.arch }}.json

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

  compare:
    needs: build
    if: ${{ github.ref != 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Compare
        run: python scripts/compare-arches.py > summary.md

      - name: Find comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: "Arch comparison"

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body-path: summary.md
          edit-mode: replace

  release:
    needs: build
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: artifact-macos*
          merge-multiple: true

      - name: Release
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: macos
          prerelease: true
          title: "macOS Build"
          files: |
            *.tar.bz2
            meta-arm64.json
            meta-x86_64.json
