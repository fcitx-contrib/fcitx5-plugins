name: macOS build

on:
  workflow_call:
    inputs:
      mozc_sha:
        description: "Commit SHA of google/mozc"
        required: true
        type: string

jobs:
  build:
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: arm64, goarch: arm64 }
          - { arch: x86_64, goarch: amd64 }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: google/mozc
          path: fcitx5-mozc/mozc
          ref: ${{ inputs.mozc_sha }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        env:
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
        run: |
          brew update # always use latest go as github actions image may be inconsistent between runs.
          brew install \
            extra-cmake-modules \
            ninja \
            go
          ./scripts/install-deps.sh macos ${{ matrix.arch }}
          sudo tar xf cache/macos/marisa-${{ matrix.arch }}.tar.bz2 -C /usr/local bin/marisa-build # Make use of Rosetta
          pip install dirhash

      - name: Install Fcitx5 dev package
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/master' || ${{ github.event_name }} == 'pull_request' ]]; then
            tag=latest
          else
            ref_name=${{ github.ref_name }}
            tag=${ref_name#macos-}
          fi
          wget https://github.com/fcitx-contrib/fcitx5-macos/releases/download/$tag/Fcitx5-${{ matrix.arch }}-dev.tar.bz2
          sudo tar xf Fcitx5-${{ matrix.arch }}-dev.tar.bz2 -C "/Library/Input Methods"

      - name: Build
        env:
          CGO_ENABLED: 1
          CGO_CFLAGS: -mmacosx-version-min=13.3
          GOFLAGS: -ldflags=-buildid=
          GOARCH: ${{ matrix.goarch }}
        run: |
          git apply --directory=libime patches/libime.patch
          cmake -B build/macos-${{ matrix.arch }} -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}
          cmake --build build/macos-${{ matrix.arch }}
          ./scripts/install.sh macos ${{ matrix.arch }}

      - name: Upload arch-specific artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-macos-${{ matrix.arch }}
          path: |
            build/macos-${{ matrix.arch }}/*-${{ matrix.arch }}.tar.bz2

      - name: Upload arch-unspecific artifact
        if: ${{ matrix.arch == 'arm64' }}
        uses: actions/upload-artifact@v4
        with:
          name: artifact-macos
          path: |
            build/macos-${{ matrix.arch }}/*-any.tar.bz2

      - name: Check validity
        run: |
          ./scripts/check-validity.sh
          python scripts/check-shared-files.py build/macos-${{ matrix.arch }}/*/data/plugin/*.json

      - name: Generate meta-${{ matrix.arch }}.json
        run: |
          python scripts/generate-meta.py ${{ matrix.arch }}

      - name: Upload meta-${{ matrix.arch }}.json
        uses: actions/upload-artifact@v4
        with:
          name: artifact-macos-meta-${{ matrix.arch }}.json
          path: |
            meta-${{ matrix.arch }}.json

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

  compare:
    needs: build
    if: ${{ github.event_name == 'pull_request' }}
    uses: ./.github/workflows/compare.yml
    with:
      platform: macos

  release:
    needs: build
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          pattern: artifact-macos*
          merge-multiple: true

      - name: Release
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ github.ref == 'refs/heads/master' && 'macos-latest' || github.ref_name }}
          prerelease: ${{ github.ref == 'refs/heads/master' }}
          title: ${{ github.ref == 'refs/heads/master' && 'macos-latest' || github.ref_name }}
          files: |
            *.tar.bz2
            meta-arm64.json
            meta-x86_64.json
